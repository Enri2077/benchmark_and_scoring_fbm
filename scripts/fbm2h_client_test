#!/usr/bin/env python

import random
import time
import yaml

import rospy
from rockin_scoring.Client import Client

### test
print "BM1H client test node started"
###

benchmark = Client("client_test")

# Get items	to generate random results
#items = rospy.get_param('items')
random.seed(time.clock())


raw_input("ready to start: press ENTER")

# Connect to the refbox (check time sync, etc)
benchmark.Connect()
rospy.loginfo("FBM1H client test node started")

waypoints = None
i = 1

segments_execution_time = {1: 1 , 2: 4 , 3: 6 , 4: 3}

while (benchmark.Running()):
	# Get the goal (encoded as YAML string)
	goal_yaml = benchmark.RequestGoal()
	goal = yaml.load(goal_yaml)
	if goal:
		waypoints = goal
		print "<- RECEIVED WAYPOINTS", waypoints
	else:
		print "<- RECEIVED GOAL (EMPTY)"
	
	print "\nNEXT WP:", i
	
	next_wp = waypoints[i]
	
	# Execute the benchmark...
#	time.sleep(segments_execution_time[i])
	
	# Wait for manual confirmation to send reached_waypoint
	raw_input("ready to send reached_waypoint: press ENTER")
	
	result = {
		'int': i
	}
	
	print "-> SENDING RESULT"
	for field in result:
		print "%s: %s" % (field, result[field])
	
	# Convert result to YAML string
	result_yaml = yaml.dump(result)
	benchmark.SendResult(result_yaml)
	
	i = i + 1

raw_input("press ENTER to close")
